name: dcc.release
on:
  release:
    types:
    - created
jobs:
  build:
    defaults:
      run:
        working-directory: dcc-validation-decorator
    runs-on: ubuntu-20.04
    env:
      APP_VERSION: ${{ github.event.release.tag_name }}
    steps:
    - uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: adopt
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - name: mvn
      run: |-
        mvn versions:set \
        --batch-mode \
        --file ./pom.xml \
        --settings ./settings.xml \
        --define newVersion="${APP_VERSION}"
        mvn clean deploy \
        --batch-mode \
        --file ./pom.xml \
        --settings ./settings.xml \
        --define app.packages.username="${APP_PACKAGES_USERNAME}" \
        --define app.packages.password="${APP_PACKAGES_PASSWORD}"
      env:
        APP_PACKAGES_USERNAME: ${{ github.actor }}
        APP_PACKAGES_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    - name: docker
      run: |-
        echo "${APP_PACKAGES_PASSWORD}" | docker login "${APP_PACKAGES_URL}" \
        --username "${APP_PACKAGES_USERNAME}" \
        --password-stdin
        docker build . \
        --file ./docker/Native \
        --tag "${APP_PACKAGES_URL}:latest" \
        --tag "${APP_PACKAGES_URL}:${APP_VERSION}"
        docker push "${APP_PACKAGES_URL}:latest"
        docker push "${APP_PACKAGES_URL}:${APP_VERSION}"
      env:
        APP_PACKAGES_URL: us-central1-docker.pkg.dev/${{ github.repository }}/dcc-validation-decorator/dcc-validation-decorator
        APP_PACKAGES_USERNAME: ${{ github.actor }}
        APP_PACKAGES_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
